
import 'dart:async';

import 'package:endoscopy_tool/widgets/screenshot_button_widget.dart';
import 'package:endoscopy_tool/widgets/VoiceCommandService.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';

import '../main.dart';

class VoiceCommandHome extends StatefulWidget {
  @override
  _VoiceCommandHomeState createState() => _VoiceCommandHomeState();
}

class _VoiceCommandHomeState extends State<VoiceCommandHome> {
  final GlobalKey screenshotKey = GlobalKey();
  final GlobalKey<ScreenshotButtonState> screenshotButtonKey = GlobalKey();

  String _lastCommand = '–û–∂–∏–¥–∞–Ω–∏–µ...';
  StreamSubscription<String>? _commandSubscription;

  @override
  void initState() {
    super.initState();
    _startListening();
  }

  void _startListening() {
    _commandSubscription = voiceService.commandStream.listen(
          (command) async {
        print('[LOG] –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: $command');

        setState(() {
          _lastCommand = '‚úÖ –ö–æ–º–∞–Ω–¥–∞: $command';
        });

        if (command == 'screenshot') {
          final state = screenshotButtonKey.currentState;
          if (state != null) {
            await state.captureAndSaveScreenshot(context);
          }
        }
        // –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
      },
      onError: (error) {
        print('[ERROR] –û—à–∏–±–∫–∞ –ø–æ—Ç–æ–∫–∞ –∫–æ–º–∞–Ω–¥: $error');
        setState(() {
          _lastCommand = '‚ùå –û—à–∏–±–∫–∞: $error';
        });
      },
    );
  }

  @override
  void dispose() {
    _commandSubscription?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã')),
      body: Column(
        children: [
          RepaintBoundary(
            key: screenshotKey,
            child: Container(
              height: 200,
              color: Colors.amber,
              child: Center(child: Text('üì∏ –ó–æ–Ω–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞')),
            ),
          ),
          ScreenshotButton(
            key: screenshotButtonKey,
            screenshotKey: screenshotKey,
          ),
          SizedBox(height: 20),
          Text(_lastCommand, style: TextStyle(fontSize: 18)),
          SizedBox(height: 20),
          ElevatedButton(
            onPressed: () {
              // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
              _commandSubscription?.cancel();
              _startListening();
            },
            child: Text('–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è'),
          ),
        ],
      ),
    );
  }
}