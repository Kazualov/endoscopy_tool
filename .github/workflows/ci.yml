name: Flutter & FastAPI CI

on:
  push:
    branches: [Tests]
  pull_request:
    branches: [Tests]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    name: Lint Python
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: |
          pip install flake8
          flake8 videoQueries > flake8-report.txt || true
      - uses: actions/upload-artifact@v4
        with:
          name: flake8-report
          path: flake8-report.txt

  lint-flutter:
    runs-on: ubuntu-latest
    name: Lint Flutter
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
      - run: flutter pub get
      - run: flutter analyze > flutter-lint.txt || true
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-lint
          path: flutter-lint.txt

  build-flutter:
    runs-on: windows-latest
    name: Build Flutter App (Windows)
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
      - run: flutter pub get
      - run: flutter build windows
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-windows-build
          path: build/windows/runner/Release

  test-python:
    runs-on: ubuntu-latest
    name: Python Tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y portaudio19-dev

      - name: Download YOLO model
        run: |
          cd videoQueries/Detection_model
          curl -L -o best.pt https://example.com/path/to/your/best.pt

      
      - name: Download Vosk model
        run: |
          cd videoQueries
          curl -LO https://alphacephei.com/vosk/models/vosk-model-small-ru-0.22.zip
          unzip vosk-model-small-ru-0.22.zip
          rm vosk-model-small-ru-0.22.zip

      
      - run: |
          cd videoQueries
          pip install -e .
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - run: |
          export PYTHONPATH=$PYTHONPATH:$GITHUB_WORKSPACE
          pytest --cov=videoQueries \
                 --junitxml=results.xml \
                 --cov-report=xml \
                 --cov-report=html
      - uses: actions/upload-artifact@v4
        with:
          name: python-coverage-xml
          path: coverage.xml
      - uses: actions/upload-artifact@v4
        with:
          name: python-coverage-html
          path: htmlcov/
      - uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: results.xml

  test-flutter:
    runs-on: ubuntu-latest
    name: Flutter Tests
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.4'
      - run: flutter pub get
      - run: sudo apt-get install lcov
      - run: | 
          flutter test --coverage
          genhtml coverage/lcov.info -o coverage/html
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-coverage
          path: coverage/

  security-check:
    runs-on: ubuntu-latest
    name: Python Security Check (safety)
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - run: |
          pip install -r requirements.txt
          pip install safety
          safety check --full-report > safety.txt || true
      - uses: actions/upload-artifact@v4
        with:
          name: safety-report
          path: safety.txt
